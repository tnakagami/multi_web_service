version: '3.4'

services:
    # Setup docker Web UI
    monitoring:
        build:
            context: ./external_web_ui
            # Dockerfile
            dockerfile: Dockerfile
        # image name
        image: custom_webui
        restart: always
        # Container name
        container_name: docker_webui
        # Setup port
        expose:
            - "9000"
        environment:
            APP_VIEW_ONLY: "true"
            APP_PATH_PREFIX: "/DockerWebUI"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        logging:
            driver: "json-file"
            options:
                max-size: "10m"
                max-file: "3"
        networks:
            - frontend_bridge

    # Setup reverse proxy
    nginx:
        # Build target
        build:
            context: ./nginx
            # Dockerfile
            dockerfile: Dockerfile
        # image name
        image: custom_nginx
        restart: always
        # Container name
        container_name: nginx
        # Setup port
        ports :
            - "443:443"
        env_file:
            - env_file/nginx/.env
        volumes:
            - certs:/etc/letsencrypt
            - ./staticfiles/static:/static:ro
            - ./staticfiles/storage:/storage
            - ./nginx/uwsgi_params:/etc/nginx/uwsgi_params:ro
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./syslog-ng.conf:/etc/syslog-ng/conf.d/syslog-ng-extra.conf:ro
#            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
            - ./nginx/for_development/develop_default.conf:/etc/nginx/conf.d/default.conf:ro  # for development
            - ./nginx/for_development/develop_execute.sh:/execute.sh:ro                       # for development
        logging:
            driver: "json-file"
            options:
                max-size: "10m"
                max-file: "3"
        links:
            - django
            - monitoring
        depends_on:
            - django
            - monitoring
        networks:
            - frontend_bridge

    redis:
        # Build target
        build:
            context: ./redis
            # Dockerfile
            dockerfile: Dockerfile
        # Image name
        image: custom_redis
        # Container name
        container_name: redis
        restart: always
        logging:
            driver: "json-file"
            options:
                max-size: "10m"
                max-file: "3"
        # Setup port
        expose:
            - "6379"
        networks:
            - redis_bridge

    django:
        # Build target
        build:
            context: ./django
            # Dockerfile
            dockerfile: Dockerfile
        # Image name
        image: custom_django
        # Container name
        container_name: web_service
        restart: always
        # Setup environment variables
        env_file:
            - env_file/django/.env # for django
            - env_file/mysql/.env  # for mysql root information
        environment:
            DB_HOST: mysql
        # Relationship config file to container directory
        volumes:
            - ./staticfiles/storage:/storage
            - ./django/src:/code
            - ./django/uwsgi.ini:/uwsgi.ini:ro
            - ./syslog-ng.conf:/etc/syslog-ng/conf.d/syslog-ng-extra.conf:ro
        logging:
            driver: "json-file"
            options:
                max-size: "10m"
                max-file: "3"
        links:
            - mysql
            - redis
        depends_on:
            - mysql
            - redis
        # Setup port
        expose:
            - "8081"
            - "3001"
        networks:
            - frontend_bridge
            - backend_bridge
            - redis_bridge

    # database
    mysql:
        # Build target
        build:
            context: ./mysql
            # Dockerfile
            dockerfile: Dockerfile
        # Image name
        image: custom_mysql.utf8mb4_jp
        # Container name
        container_name: mysql
        restart: always
        # Setup environment variables
        env_file:
            - env_file/mysql/.env # for mysql root information
        # Relationship config file to container directory
        volumes:
            - database:/var/lib/mysql
        logging:
            driver: "json-file"
            options:
                max-size: "10m"
                max-file: "3"
        # Setup port
        expose:
            - "3306"
        networks:
            - backend_bridge

# Setup network
networks:
    frontend_bridge:
        name: frontend_network
    backend_bridge:
        name: backend_network
    redis_bridge:
        name: redis_network

volumes:
    database:
    certs:
