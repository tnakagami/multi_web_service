version: '3.4'

services:
    test_django:
        # Build target
        build:
            context: ./for_django_test
            # Dockerfile
            dockerfile: Dockerfile.test
        # Image name
        image: test_django
        # Container name
        container_name: test_web
        restart: "no"
        # Setup environment variables
        env_file:
            - env_file/django/test.env # for django
        environment:
            DB_HOST: test_mysql
            MYSQL_ROOT_PASSWORD: rootpassowrd
            MYSQL_DATABASE: database
            MYSQL_USER: user
            MYSQL_PASSWORD: password
            MYSQL_CHARSET: utf8mb4
            MYSQL_COLLATION: utf8mb4_unicode_ci
        # Relationship config file to container directory
        volumes:
            - test_storage:/storage
            - ./django/src:/code
            - ./for_django_test/result_test:/result_test
        logging:
            driver: "json-file"
            options:
                max-size: "10m"
                max-file: "3"
        links:
            - test_mysql
        depends_on:
            - test_mysql
        # Setup port
        expose:
            - "18081"
        networks:
            - test_backend_bridge

    # database
    test_mysql:
        # Build target
        build:
            context: ./mysql
            # Dockerfile
            dockerfile: Dockerfile
        # Image name
        image: custom_mysql.utf8mb4_jp
        # Container name
        container_name: test_mysql
        restart: "no"
        # Setup environment variables
        environment:
            MYSQL_ROOT_PASSWORD: rootpassowrd
            MYSQL_DATABASE: database
            MYSQL_USER: user
            MYSQL_PASSWORD: password
            MYSQL_CHARSET: utf8mb4
            MYSQL_COLLATION: utf8mb4_unicode_ci
        # Relationship config file to container directory
        volumes:
            - test_database:/var/lib/mysql
            - ./for_django_test/grant_option.sql:/docker-entrypoint-initdb.d/001_grant_option.sql:ro
        logging:
            driver: "json-file"
            options:
                max-size: "10m"
                max-file: "3"
        # Setup port
        expose:
            - "3306"
        networks:
            - test_backend_bridge

# Setup network
networks:
    test_backend_bridge:
        name: backend

volumes:
    test_storage:
        name: test_storage
    test_database:
        name: test_database
